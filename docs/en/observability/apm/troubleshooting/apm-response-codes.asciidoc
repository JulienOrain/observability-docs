[[apm-common-response-codes]]
= APM response codes

status_badge::[stack, ga]
status_badge::[serverless, ga]
pass:[<span class="availability-note"></span>]

[[apm-bad-request]]
[float]
== HTTP 400: Data decoding error / Data validation error

The most likely cause for this error is using incompatible versions of {apm-agent} and {apm-server-or-mis}.
See the <<apm-agent-server-compatibility,agent/server compatibility matrix>> to verify compatibility.

[[apm-event-too-large]]
[float]
== HTTP 400: Event too large

APM agents communicate with the {apm-server-or-mis} by sending events in an HTTP request. Each event is sent as its own line in the HTTP request body. If events are too large, you should consider increasing the <<apm-max_event_size>>
setting in the APM integration, and adjusting relevant settings in the agent.

[[apm-unauthorized]]
[float]
== HTTP 401: Invalid token

Either:

* The <<apm-api-key>> is invalid.
* The <<apm-secret-token>> in the request header doesn't match the secret token configured in the APM integration. status_badge::[serverless, unavailable]

[[apm-forbidden]]
[float]
== HTTP 403: Forbidden request status_badge::[serverless, unavailable]

Either you are sending requests to a <<apm-rum,RUM>> endpoint without RUM enabled, or a request
is coming from an origin not specified in the APM integration settings.
See the <<apm-rum-allow-origins,Allowed origins>> setting for more information.

[[apm-request-timed-out]]
[float]
== HTTP 503: Request timed out waiting to be processed status_badge::[serverless, unavailable]

This happens when {apm-server} exceeds the maximum number of requests that it can process concurrently.
To alleviate this problem, you can try to: reduce the sample rate and/or reduce the collected stack trace information.
See <<apm-reduce-apm-storage>> for more information.

Another option is to increase processing power.
This can be done by either migrating your {agent} to a more powerful machine
or adding more {apm-server} instances.