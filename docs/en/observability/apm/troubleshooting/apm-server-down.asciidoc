[[apm-server-es-down]]
= What happens when {apm-server} or {es} is down?

status_badge::[cloud_serverless, unavailable]

*If {es} is down*

{apm-server} does not have an internal queue to buffer requests,
but instead leverages an HTTP request timeout to act as back-pressure.
If {es} goes down, the {apm-server} will eventually deny incoming requests.
Both the {apm-server} and {apm-agent}(s) will issue logs accordingly.

*If {apm-server} is down*

Some agents have internal queues or buffers that will temporarily store data if the {apm-server} goes down.
As a general rule of thumb, queues fill up quickly. Assume data will be lost if {apm-server} goes down.
Adjusting these queues/buffers can increase the agent's overhead, so use caution when updating default values.

// * **Android agent** - ??
* **Go agent** - Circular buffer with configurable size:
{apm-go-ref}/configuration.html#config-api-buffer-size[`ELASTIC_APM_BUFFER_SIZE`].
// * **iOS agent** - ??
* **Java agent** - Internal buffer with configurable size:
{apm-java-ref}/config-reporter.html#config-max-queue-size[`max_queue_size`].
* **Node.js agent** - No internal queue. Data is lost.
* **PHP agent** - No internal queue. Data is lost.
* **Python agent** - Internal {apm-py-ref}/tuning-and-overhead.html#tuning-queue[Transaction queue]
with configurable size and time between flushes.
* **Ruby agent** - Internal queue with configurable size:
{apm-ruby-ref}/configuration.html#config-api-buffer-size[`api_buffer_size`].
* **RUM agent** - No internal queue. Data is lost.
* **.NET agent** - No internal queue. Data is lost.